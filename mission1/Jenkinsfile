pipeline {
  agent any
  stages {
    stage('Checkout') {
      steps {
        // 소스코드 체크아웃
        checkout scm
      }
    }
    stage('Build') {
      steps {
        // Java 파일들을 컴파일하여 생성된 클래스 파일을 classes 디렉토리에 저장
        // window 일 경우 bat
         bat '''
        javac -encoding UTF-8 -cp "mission1/lib/*" -d classes mission1/src/mission1/*.java
        '''
      }
    }
    stage('Test') {
      steps {
        script{
          // JUnit 5 테스트 실행을 위한 classpath 설정
          // Jenkins work at - C:\ProgramData\Jenkins\.jenkins\workspace\teamproj\
          def classpath= "classes;lib/;mission1/lib/junit-platform-console-standalone-1.9.3.jar"
          echo "Classpath: ${classpath}"
          // JUnit 5 테스트 실행
          bat "java -cp ${classpath} org.junit.platform.console.ConsoleLauncher --scan-classpath > test_results.txt"
        }
      }
    }
  }
  post {
    always {
      // 테스트 결과 파일을 저장하기 위해 아카이브
      archiveArtifacts 'test_results.txt'
    }
    failure {
      echo 'Build or test failed'
    }
    success {
      echo 'Build and test succeeded'
    }
  }
}
